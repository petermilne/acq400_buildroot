#!/bin/sh

echo "Starting rcS..."


syslogd -C400

echo "++ Mounting filesystem"
mkdir -p /dev/pts /dev/shm
mount -a

# PS1=DBG1: /bin/sh

# fixup to protect existing packages
mkdir -p /usr/local/bin /usr/local/lib/modules
ln -s /usr/bin/procServ /usr/local/bin
ln -s /usr/bin/expect /usr/local/bin

export PATH=$PATH:/usr/local/bin
export LD_LIBRARY_PATH=/usr/local/lib/

cat - >>/etc/profile <<EOF
export PATH=$PATH
export LD_LIBRARY_PATH=/usr/local/lib/
EOF

echo "++ Setting up mdev"

echo /sbin/mdev > /proc/sys/kernel/hotplug
mdev -s

# PS1=DBG2: /bin/sh

echo "++ Setting hostname"
for x in $(cat /proc/cmdline)
do
	case $x in
	hostname=*) echo ${x##*=} >/etc/hostname;;
	esac
done

	
# PS1=DBG3: /bin/sh

hostname -F /etc/hostname
echo "++ Start Lo"
ifconfig lo up

echo "++ Setting EPOCH 2000 in case there is no NTP later"
date -s 200001010000

echo "++ Networking .. assigning serial console, use CTRL-C to break"
if [ -e /mnt/local/network ]; then
	echo "++ Sourcing /mnt/network.."
	source /mnt/local/network
else
	/etc/network/default-networkrc
fi

[ -e /mnt/local/ntpd.conf ] && /mnt/local/ntpd.conf


source /tmp/dhcp.env
if [ ! -z $rootpath ];then
	echo "++ NFS boot: rootpath set $rootpath"
	mount -t nfs -o ro,nolock $rootpath /usr/local
else
	echo "++ second stage diskless image fetch required WORKTODO"
	PS1=DBG4: /bin/sh
fi


echo "++ locate kernel modules"

/sbin/insmod /usr/local/lib/modules/xilinx_devcfg.ko
/sbin/mdev -s

	
echo "++ Starting http daemon"
httpd -h /var/www

echo "++ Starting ssh daemon"
chmod 600 /etc/ssh/*
/usr/sbin/sshd

if [ -e /usr/local/CPSC2_TOP_02_43.bit.gz ]; then
	echo "++ Loading FPGA /usr/local/CPSC2_TOP_02_43.bit.gz"
	gunzip -c /usr/local/CPSC2_TOP_02_43.bit.gz | xiloader -L
	echo "++ FPGA Load complete"
else
	echo "FPGA image not found dropping out to shell"
	PS1=DBG5: /bin/sh
fi

/usr/local/bin/load.packages /usr/local/packages

# PS1=DBG6: /bin/sh

if [ -x /usr/local/init/rc.user ]; then
	echo ++ calling /usr/local/rc.user
	/usr/local/rc.user	
fi

# PS1=DBG7: /bin/sh

echo $(hostname) $(uptime) > /var/www/d-tacq/rc-local-complete
echo "++ rcS complete $(cat /var/www/d-tacq/rc-local-complete)"



