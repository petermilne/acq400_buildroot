#!/bin/sh

echo "Starting rcS... pgm 20190714"
/sbin/mdev -s
syslogd -C400

echo "++ Mounting filesystem"
mkdir -p /dev/pts /dev/shm
mount -a
mount /mnt

# PS1=DBG1: /bin/sh

# fixup to protect existing packages
mkdir -p /usr/local/bin /usr/local/lib/modules
ln -s /usr/bin/procServ /usr/local/bin
ln -s /usr/bin/expect /usr/local/bin

export PATH=$PATH:/usr/local/bin
export LD_LIBRARY_PATH=/usr/local/lib/

cat - >>/etc/profile <<EOF
export PATH=$PATH
export LD_LIBRARY_PATH=/usr/local/lib/
EOF

echo "++ Setting up mdev"

echo /sbin/mdev > /proc/sys/kernel/hotplug
mdev -s

# PS1=DBG2: /bin/sh

echo "++ Setting hostname"
for x in $(cat /proc/cmdline)
do
	case $x in
	hostname=*) echo ${x##*=} >/etc/hostname;;
	esac
done

	
# PS1=DBG3: /bin/sh

hostname -F /etc/hostname
echo "++ Start Lo"
ifconfig lo up

echo "++ Setting EPOCH 2000 in case there is no NTP later"
date -s 200001010000

echo "++ Networking .. assigning serial console, use CTRL-C to break"
if [ -e /mnt/local/network ]; then
	echo "++ Sourcing /mnt/network.."
	source /mnt/local/network
else
	/etc/network/default-networkrc
fi

[ -e /mnt/local/ntpd.conf ] && /mnt/local/ntpd.conf


source /tmp/dhcp.env
boot_with_nfs=1
if [ ! -z $rootpath ];then
	nfstrip=${rootpath#nfs://*}
	tftpstrip=${rootpath#tftp://*}
	if [ "x$nfstrip" != "x$rootpath" ]; then
		rootpath=$nfstrip
		echo "++ NFS boot: nfs:// URI rootpath set $rootpath"
	elif [ "x$tftpstrip" != "x$rootpath" ]; then
		echo "++ TFTPBOOT $tftpstrip"
		rootpath=$tftpstrip
		boot_with_nfs=0
	else
		echo "++ NFS boot: old school rootpath set $rootpath"
	fi
else
	PS1=DBG3: /bin/sh
fi
if [ $boot_with_nfs -eq 1 ]; then
	MD=/usr/.local/mnt
	mkdir -p $MD; mount -t ramfs ram $MD
	LD=/usr/.local/nfslocal
	mkdir -p $LD
	UD=/usr/.local/mnt/local
	WD=/usr/.local/mnt/work
	mkdir -p $UD $WD
	mount -t nfs -o ro,nolock $rootpath /usr/.local/nfslocal
	mount -t overlay overlay \
		-olowerdir=$LD,upperdir=$UD,workdir=$WD	/usr/local
	echo "++ overlay $LD,$UD => /usr/local mounted"
else
	echo "++ second stage diskless tftp get rootpath=$rootpath"
	tftp_host=${rootpath%:*}
	tftp_path=${rootpath#*:}
	tarfile=/tmp/$(basename $tftp_path)
	tftp -l $tarfile -r $tftp_path -g $tftp_host &&
	sha1sum $tarfile &&
	tar xzf $tarfile -C / 
	if [ $? -eq 0 ]; then
		echo "++ successful extract: clean up and continue"
		rm $tarfile
	else
		PS1=DBG4: /bin/sh
	fi
fi


echo "++ Starting ssh daemon"
chmod 600 /etc/ssh/*
/usr/sbin/sshd

/usr/local/bin/load.packages /usr/local/packages

# PS1=DBG6: /bin/sh


RCUSER=/mnt/local/rc.user
if [ -x $RCUSER ]; then
	echo ++ calling $RCUSER
	$RCUSER
fi

# PS1=DBG7: /bin/sh

echo $(hostname) $(uptime) > /var/www/d-tacq/rc-local-complete
echo "++ rcS complete $(cat /var/www/d-tacq/rc-local-complete)"



